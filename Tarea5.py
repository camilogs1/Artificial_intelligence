{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Tarea5.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/camilogs1/Artificial_intelligence/blob/main/Tarea5.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Tarea 5\n"
      ],
      "metadata": {
        "id": "x2IagsjFKk4I"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YCNOuj1vO9DU",
        "outputId": "1c52845f-3ea8-47f2-c367-3d6058991a78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "dataset = pd.read_csv(r'/content/drive/MyDrive/Inteligencia artificial/Clase 11/winequality-red.csv')\n",
        "dataset = np.array(dataset)\n"
      ],
      "metadata": {
        "id": "wQrUEShBVBqX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(dataset.shape)\n",
        "X = dataset[:,0:11]\n",
        "Y = dataset[:,11]"
      ],
      "metadata": {
        "id": "R-FQkuYKchX_",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1581d7d0-e25b-4f92-9657-26e2509430f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1599, 12)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sklearn\n",
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test,Y_train, Y_test= train_test_split(X,Y,test_size=0.2,random_state=14541)"
      ],
      "metadata": {
        "id": "yOeCSsW7PnGj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "scaler = MinMaxScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)"
      ],
      "metadata": {
        "id": "lT8CMpxfhF20"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "==================================================================="
      ],
      "metadata": {
        "id": "QxwYdVvXNozC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#KNN\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "Modelo_0 = KNeighborsClassifier(3)\n",
        "Modelo_0.fit(X_train, Y_train)\n",
        "Y_pred_0 =Modelo_0.predict (X_test)\n",
        "#Graficando\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_0[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hrKYKp2XvH0f",
        "outputId": "cf502648-d028-4613-def6-b4e9b50697e0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   7.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   8.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "4.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   4.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "4.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   6.0\n",
            "4.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "3.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   4.0\n",
            "7.0   7.0\n",
            "7.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "6.0   5.0\n",
            "4.0   3.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "8.0   7.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "6.0   7.0\n",
            "3.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "7.0   7.0\n",
            "4.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   5.0\n",
            "6.0   7.0\n",
            "7.0   6.0\n",
            "6.0   4.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "4.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   4.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "3.0   4.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Matriz confusion\n",
        "import sklearn\n",
        "from sklearn.metrics import confusion_matrix\n",
        "matrix = confusion_matrix(Y_test, Y_pred_0)\n",
        "print(matrix)\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mPkLoctPv_In",
        "outputId": "76f18c27-001d-4f73-b3be-36fd833e24f8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0  1  2  0  0  0]\n",
            " [ 1  1  4  4  1  0]\n",
            " [ 0  1 90 40  1  0]\n",
            " [ 0  2 33 80  9  0]\n",
            " [ 0  0 11 15 20  1]\n",
            " [ 0  0  0  0  3  0]]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calculando desempeño (Exactitud)\n",
        "from sklearn.metrics import accuracy_score,precision_score\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_0))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ADES7jn9wODg",
        "outputId": "f8d7eed0-bdd8-40d0-b1ad-9c32dd1be83c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy  0.596875\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Creación del nuevo objetivo\n",
        "X_new = np.array([[7.4, 0.6, 0, 1, 0.094, 17, 58, 0.995 , 3.23, 0.5, 9.1], [5.6, 0.7, 0.15, 1.1, 0.057, 41, 10, 0.9321, 3.84, 0.41, 10.5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "#Prediccion\n",
        "prediction_0 = Modelo_0.predict(X_new)\n",
        "print(\"Predictions of Quality are: \",prediction_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mnGQMGH4wZ_f",
        "outputId": "b5a0bda9-aacb-470f-e662-43e7b3b04d29"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Quality are:  [5. 7.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "================================================================"
      ],
      "metadata": {
        "id": "61pbXL9ENuxv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Naive Bayes\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "Modelo_1 = GaussianNB()\n",
        "Modelo_1.fit(X_train, Y_train)\n",
        "Y_pred =Modelo_1.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred[j])\n",
        "print('')"
      ],
      "metadata": {
        "id": "5jbxJrXz0cuN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "366c7ef4-a1d2-4ab2-f5f4-cd1298245a9f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   7.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   7.0\n",
            "6.0   7.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   4.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "3.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   4.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   5.0\n",
            "5.0   4.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "4.0   6.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   7.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   7.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   4.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   7.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "4.0   6.0\n",
            "5.0   6.0\n",
            "4.0   5.0\n",
            "5.0   7.0\n",
            "6.0   7.0\n",
            "3.0   4.0\n",
            "7.0   7.0\n",
            "6.0   4.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "7.0   7.0\n",
            "4.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   7.0\n",
            "7.0   7.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   8.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   4.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   4.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   7.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "4.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   4.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   4.0\n",
            "7.0   7.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "3.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Matrix confusion\n",
        "import sklearn\n",
        "from sklearn.metrics import confusion_matrix\n",
        "matrix = confusion_matrix(Y_test, Y_pred)\n",
        "print(matrix)\n",
        "print('')\n"
      ],
      "metadata": {
        "id": "qgxSk5RAPz3g",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a9c6b973-c0c9-45b0-feea-f05e168c2e78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0  1  2  0  0  0]\n",
            " [ 0  2  6  3  0  0]\n",
            " [ 0  6 95 22  9  0]\n",
            " [ 0  1 41 61 20  1]\n",
            " [ 0  0  4 18 25  0]\n",
            " [ 0  0  0  0  3  0]]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calculando desempeño (Exactitud)\n",
        "from sklearn.metrics import accuracy_score,precision_score\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PgmAq5f-7noC",
        "outputId": "f6706bf4-db6b-42b2-f66e-53bc1254c74b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy  0.571875\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[7.4, 0.6, 0, 1, 0.094, 17, 58, 0.995 , 3.23, 0.5, 9.1], [5.6, 0.7, 0.15, 1.1, 0.057, 41, 10, 0.9321, 3.84, 0.41, 10.5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction = Modelo_1.predict(X_new)\n",
        "print(\"Predictions of Quality are: \",prediction)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NDU1thf96nti",
        "outputId": "bfc35603-bd7f-403b-ecef-2f5aa8f996e9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Quality are:  [5. 8.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "==============================================================="
      ],
      "metadata": {
        "id": "kDHX4J72N5fh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#LDA\n",
        "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n",
        "Modelo_2 = LinearDiscriminantAnalysis()\n",
        "Modelo_2.fit(X_train, Y_train)\n",
        "Y_pred_2 =Modelo_2.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_2[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "--2XgIlwx6M1",
        "outputId": "35e7c683-c0d8-4a2a-946c-2bb30fbf5423"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   7.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   4.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "3.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   8.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "4.0   6.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "4.0   6.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "6.0   7.0\n",
            "3.0   3.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "7.0   7.0\n",
            "4.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   4.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "4.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   4.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "3.0   6.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Matrix confusión\n",
        "import sklearn\n",
        "from sklearn.metrics import confusion_matrix\n",
        "matrix = confusion_matrix(Y_test, Y_pred_2)\n",
        "print(matrix)\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "weLnQ2OPeO1d",
        "outputId": "d501feab-053f-49ca-a7c0-a25604042dcd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[  1   0   1   1   0   0]\n",
            " [  0   2   6   2   1   0]\n",
            " [  0   0 101  29   2   0]\n",
            " [  0   1  44  70   8   1]\n",
            " [  0   0   4  25  18   0]\n",
            " [  0   0   0   0   3   0]]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calculando desempeño (Exactitud)\n",
        "from sklearn.metrics import accuracy_score,precision_score\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Eri7PD1OeZsm",
        "outputId": "ffbbe289-0c8b-47d1-867c-fe0711185ab5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy  0.6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[7.4, 0.6, 0, 1, 0.094, 17, 58, 0.995 , 3.23, 0.5, 9.1], [5.6, 0.7, 0.15, 1.1, 0.057, 41, 10, 0.9321, 3.84, 0.41, 10.5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction = Modelo_2.predict(X_new)\n",
        "print(\"Predictions of Quality are: \",prediction)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UcidjblDefcu",
        "outputId": "ac4727dd-7e1d-4bb2-c304-292b5bcb051d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Quality are:  [5. 3.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "==============================================================="
      ],
      "metadata": {
        "id": "6f17cRO7OGv_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#QDA\n",
        "from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\n",
        "Modelo_3 = QuadraticDiscriminantAnalysis()\n",
        "Modelo_3.fit(X_train, Y_train)\n",
        "Y_pred_3 =Modelo_3.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_3[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jbsYJA6UOVpP",
        "outputId": "55d5a82d-43f0-45d6-e497-4f412d5d32f9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   7.0\n",
            "5.0   6.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   4.0\n",
            "5.0   5.0\n",
            "7.0   8.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "4.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   8.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "3.0   5.0\n",
            "6.0   7.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   8.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "7.0   5.0\n",
            "5.0   4.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   8.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   4.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   8.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "7.0   8.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "4.0   6.0\n",
            "5.0   6.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "3.0   4.0\n",
            "7.0   8.0\n",
            "6.0   4.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "7.0   7.0\n",
            "4.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   4.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "6.0   7.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "4.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "4.0   4.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   4.0\n",
            "7.0   7.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "3.0   6.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/discriminant_analysis.py:878: UserWarning: Variables are collinear\n",
            "  warnings.warn(\"Variables are collinear\")\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Matrix confusion\n",
        "import sklearn\n",
        "from sklearn.metrics import confusion_matrix\n",
        "matrix = confusion_matrix(Y_test, Y_pred_3)\n",
        "print(matrix)\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OGNNjAhzRKYn",
        "outputId": "94a87fd7-85b0-4f17-b131-93cc84f2fe4e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0  1  1  1  0  0]\n",
            " [ 0  1  7  2  1  0]\n",
            " [ 0  4 88 37  3  0]\n",
            " [ 0  2 41 66 13  2]\n",
            " [ 0  0  2 22 18  5]\n",
            " [ 0  0  0  0  3  0]]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calculando desempeño (Exactitud)\n",
        "from sklearn.metrics import accuracy_score,precision_score\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_3))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uDAN3nypRNid",
        "outputId": "89c4e645-1144-46c1-a2e8-7c1311bef85e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy  0.540625\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[7.4, 0.6, 0, 1, 0.094, 17, 58, 0.995 , 3.23, 0.5, 9.1], [5.6, 0.7, 0.15, 1.1, 0.057, 41, 10, 0.9321, 3.84, 0.41, 10.5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction = Modelo_3.predict(X_new)\n",
        "print(\"Predictions of Quality are: \",prediction)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rT8f-F2CSgwD",
        "outputId": "79c6e455-dfed-4032-8c06-554ed1ca203d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Quality are:  [5. 4.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "============================================"
      ],
      "metadata": {
        "id": "D1cdHKlAolKH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Tree classifier\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "Modelo_4 = DecisionTreeClassifier()\n",
        "Modelo_4.fit(X_train, Y_train)\n",
        "Y_pred_4 =Modelo_4.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_4[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ys56sYAVpLuX",
        "outputId": "50cc22cd-f807-4bd2-dce6-0d8f935d6845"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "4.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   4.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "8.0   6.0\n",
            "6.0   6.0\n",
            "4.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "3.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   4.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "7.0   7.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   4.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   8.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   7.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "8.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   4.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   3.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "7.0   8.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "4.0   6.0\n",
            "5.0   6.0\n",
            "4.0   6.0\n",
            "5.0   3.0\n",
            "6.0   7.0\n",
            "3.0   5.0\n",
            "7.0   6.0\n",
            "6.0   4.0\n",
            "7.0   7.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "7.0   6.0\n",
            "4.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "7.0   8.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   6.0\n",
            "5.0   4.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   7.0\n",
            "6.0   5.0\n",
            "5.0   4.0\n",
            "7.0   6.0\n",
            "4.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   4.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "3.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Matrix confusion\n",
        "import sklearn\n",
        "from sklearn.metrics import confusion_matrix\n",
        "matrix = confusion_matrix(Y_test, Y_pred_4)\n",
        "print(matrix)\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NZj61Qvm4Rqt",
        "outputId": "d3ae4724-79ad-40c0-9db5-0cd50351ecfa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0  0  3  0  0  0]\n",
            " [ 0  1  5  4  1  0]\n",
            " [ 2  5 97 26  2  0]\n",
            " [ 0  2 33 74 15  0]\n",
            " [ 0  0  3 18 23  3]\n",
            " [ 0  0  0  2  1  0]]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calculando desempeño (Exactitud)\n",
        "from sklearn.metrics import accuracy_score,precision_score\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_4))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MblXCRb64Yho",
        "outputId": "59a37d59-8257-4896-8a1e-af0fb661756c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy  0.609375\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[7.4, 0.6, 0, 1, 0.094, 17, 58, 0.995 , 3.23, 0.5, 9.1], [5.6, 0.7, 0.15, 1.1, 0.057, 41, 10, 0.9321, 3.84, 0.41, 10.5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction = Modelo_4.predict(X_new)\n",
        "print(\"Predictions of Quality are: \",prediction)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n0gyCJ1s4gA4",
        "outputId": "f0335aac-b0c1-4ef8-cb1e-ed5f2aa3d1cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Quality are:  [7. 7.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "============================================"
      ],
      "metadata": {
        "id": "7DHKi3hV8zOQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#SVM classifier\n",
        "from sklearn.svm import SVC\n",
        "Modelo_5 = SVC()\n",
        "Modelo_5.fit(X_train, Y_train)\n",
        "Y_pred_5 =Modelo_5.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_5[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nbkUJCyeELCu",
        "outputId": "db24d709-22ae-4095-9675-145f49b376a2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "8.0   7.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "8.0   6.0\n",
            "6.0   6.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "4.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "3.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   7.0\n",
            "5.0   5.0\n",
            "6.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "8.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "7.0   7.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "4.0   6.0\n",
            "5.0   6.0\n",
            "4.0   5.0\n",
            "5.0   6.0\n",
            "6.0   7.0\n",
            "3.0   5.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "7.0   7.0\n",
            "4.0   7.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "6.0   5.0\n",
            "4.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "7.0   6.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "7.0   7.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "6.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "4.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "4.0   5.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "5.0   6.0\n",
            "5.0   5.0\n",
            "7.0   6.0\n",
            "6.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "7.0   5.0\n",
            "6.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "5.0   5.0\n",
            "7.0   7.0\n",
            "7.0   6.0\n",
            "5.0   5.0\n",
            "6.0   5.0\n",
            "3.0   6.0\n",
            "5.0   6.0\n",
            "6.0   5.0\n",
            "7.0   6.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Matrix confusion\n",
        "import sklearn\n",
        "from sklearn.metrics import confusion_matrix\n",
        "matrix = confusion_matrix(Y_test, Y_pred_5)\n",
        "print(matrix)\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TS9FGa_CEhJr",
        "outputId": "3354dae6-f7aa-4720-86ec-62523b330b60"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[  0   0   2   1   0   0]\n",
            " [  0   0   8   2   1   0]\n",
            " [  0   0 105  27   0   0]\n",
            " [  0   0  47  72   5   0]\n",
            " [  0   0   4  36   7   0]\n",
            " [  0   0   0   2   1   0]]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Calculando desempeño (Exactitud)\n",
        "from sklearn.metrics import accuracy_score,precision_score\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_5))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LH4d4WQdEraU",
        "outputId": "adc8010d-f4ee-4ff9-c836-b22cf4f08f51"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy  0.575\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[3, 2, 1, 0.2, 4.9, 2.2, 3.8, 1.1 , 5, 2, 2.4], [4.9, 2.2, 3.8, 1.1, 0.5, 3.8, 6, 1.2, 2, 1.6, 6.1]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction = Modelo_5.predict(X_new)\n",
        "print(\"Predictions of Quality are: \",prediction)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g3VkquBUEvKx",
        "outputId": "2213968f-3eeb-4703-e890-00bc1c337f2f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Quality are:  [5. 5.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "=================================================================== EXERCISE 2 "
      ],
      "metadata": {
        "id": "RNP5kGFcTGcS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Dataset clientes\n",
        "#Link -> https://www.kaggle.com/datasets/prathamtripathi/customersegmentation\n",
        "dataset2 = pd.read_csv(r'/content/drive/MyDrive/Inteligencia artificial/Tarea5/customers.csv')\n",
        "dataset2 = np.array(dataset2)\n",
        "X = dataset2[:,0:11]\n",
        "Y = dataset2[:,11]"
      ],
      "metadata": {
        "id": "H8Y0mcWbTHM8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Y2=np.zeros((len(Y)))\n",
        "for i in range(0,len(Y)):\n",
        "  if Y[i]=='A':\n",
        "     Y2[i]=0\n",
        "  else:\n",
        "     if Y[i]=='B':\n",
        "        Y2[i]=1\n",
        "     else:\n",
        "        if Y[i]=='C':\n",
        "            Y2[i]=2   \n",
        "        else:\n",
        "            Y2[i]=3\n",
        "            \n",
        "X_train, X_test,Y_train, Y_test= train_test_split(X,Y2,test_size=0.2,random_state=14541)"
      ],
      "metadata": {
        "id": "8ZutENapTvZD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = MinMaxScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)"
      ],
      "metadata": {
        "id": "a5j-oXN2Z-gX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#KNN\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "Modelo_0 = KNeighborsClassifier(3)\n",
        "Modelo_0.fit(X_train, Y_train)\n",
        "Y_pred_0 =Modelo_0.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_0[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HBmQfCfHaDwL",
        "outputId": "2307a509-068c-4c76-ed96-2defaf2d6aee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "3.0   1.0\n",
            "1.0   1.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   1.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "1.0   3.0\n",
            "0.0   2.0\n",
            "2.0   0.0\n",
            "2.0   2.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "0.0   2.0\n",
            "0.0   2.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "2.0   0.0\n",
            "1.0   1.0\n",
            "0.0   2.0\n",
            "3.0   0.0\n",
            "3.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "0.0   2.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   2.0\n",
            "1.0   2.0\n",
            "1.0   0.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "3.0   0.0\n",
            "3.0   0.0\n",
            "0.0   1.0\n",
            "2.0   2.0\n",
            "0.0   1.0\n",
            "2.0   0.0\n",
            "3.0   1.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "0.0   1.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "0.0   1.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "3.0   0.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "0.0   1.0\n",
            "1.0   0.0\n",
            "3.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "0.0   2.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "2.0   1.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "2.0   2.0\n",
            "3.0   0.0\n",
            "0.0   1.0\n",
            "0.0   0.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   2.0\n",
            "2.0   2.0\n",
            "3.0   1.0\n",
            "2.0   2.0\n",
            "1.0   2.0\n",
            "3.0   1.0\n",
            "2.0   0.0\n",
            "0.0   2.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "1.0   0.0\n",
            "1.0   1.0\n",
            "1.0   3.0\n",
            "2.0   1.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "3.0   2.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "1.0   1.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "0.0   1.0\n",
            "1.0   1.0\n",
            "0.0   2.0\n",
            "1.0   0.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "3.0   1.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "0.0   1.0\n",
            "0.0   1.0\n",
            "3.0   1.0\n",
            "1.0   0.0\n",
            "0.0   1.0\n",
            "3.0   0.0\n",
            "1.0   3.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   1.0\n",
            "1.0   0.0\n",
            "1.0   2.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "0.0   2.0\n",
            "1.0   1.0\n",
            "1.0   3.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "1.0   3.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "1.0   1.0\n",
            "3.0   1.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   1.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "2.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matrix = confusion_matrix(Y_test, Y_pred_0)\n",
        "print(matrix)\n",
        "print('')\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_0))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_YNCiXPLfk7J",
        "outputId": "194d3246-6943-4d51-a4c9-c12eedff9bc8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[31 11 14  3]\n",
            " [12 10  4 14]\n",
            " [27  4 21  4]\n",
            " [21 10  7  7]]\n",
            "\n",
            "Accuracy  0.345\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[1, 26, 25, 150, 1, 3, 3, 0, 1, 0, 4], [3, 11, 18, 126, 0, 26, 13, 1, 1, 1, 5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction_0 = Modelo_0.predict(X_new)\n",
        "print(\"Predictions of Customers are: \",prediction_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H3kPELg1jZMA",
        "outputId": "31aa13b6-d874-4e6e-98ba-0591f034f8a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Customers are:  [1. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\\================================================================"
      ],
      "metadata": {
        "id": "RlPRNLEIltCx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Naive Bayes\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "Modelo_1 = GaussianNB()\n",
        "Modelo_1.fit(X_train, Y_train)\n",
        "Y_pred =Modelo_1.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zZZLMhhQlttq",
        "outputId": "a539ab58-0aeb-4867-d621-2073041f20b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "3.0   3.0\n",
            "1.0   1.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "2.0   3.0\n",
            "1.0   3.0\n",
            "2.0   1.0\n",
            "2.0   0.0\n",
            "1.0   1.0\n",
            "2.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "2.0   3.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   1.0\n",
            "1.0   0.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "3.0   0.0\n",
            "3.0   3.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "1.0   3.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "1.0   3.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "0.0   2.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "3.0   2.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "1.0   3.0\n",
            "0.0   1.0\n",
            "1.0   2.0\n",
            "0.0   2.0\n",
            "1.0   3.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "2.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   1.0\n",
            "3.0   2.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "0.0   2.0\n",
            "1.0   3.0\n",
            "1.0   3.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "0.0   0.0\n",
            "0.0   2.0\n",
            "3.0   1.0\n",
            "1.0   3.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "3.0   0.0\n",
            "2.0   1.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "3.0   3.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matrix = confusion_matrix(Y_test, Y_pred)\n",
        "print(matrix)\n",
        "print('')\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wAJ9Pw4cqO6D",
        "outputId": "32dcbe95-5b34-4eb3-e2b9-3eafd881ed39"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[43  1  5 10]\n",
            " [15  7  5 13]\n",
            " [22  6 19  9]\n",
            " [19  4  7 15]]\n",
            "\n",
            "Accuracy  0.42\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[1, 26, 25, 150, 1, 3, 3, 0, 1, 0, 4], [3, 11, 18, 126, 0, 26, 13, 1, 1, 1, 5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction_0 = Modelo_0.predict(X_new)\n",
        "print(\"Predictions of Customers are: \",prediction_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OxGUi55GqUFq",
        "outputId": "23ce5864-8d58-4f01-c752-93b29740c651"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Customers are:  [1. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "==============================================================="
      ],
      "metadata": {
        "id": "7KquX2bDqgAH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#LDA\n",
        "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n",
        "Modelo_2 = LinearDiscriminantAnalysis()\n",
        "Modelo_2.fit(X_train, Y_train)\n",
        "Y_pred_2 =Modelo_2.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_2[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "50YEoDf6qgi_",
        "outputId": "ee9c55cd-3d5f-4ce5-e9bb-acfcc53f4c48"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "3.0   3.0\n",
            "1.0   3.0\n",
            "1.0   3.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "2.0   2.0\n",
            "3.0   3.0\n",
            "0.0   2.0\n",
            "2.0   2.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   3.0\n",
            "1.0   3.0\n",
            "2.0   1.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "3.0   1.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   1.0\n",
            "1.0   2.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "3.0   2.0\n",
            "3.0   3.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "0.0   1.0\n",
            "1.0   1.0\n",
            "0.0   2.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   1.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "1.0   3.0\n",
            "1.0   1.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "0.0   2.0\n",
            "2.0   0.0\n",
            "0.0   3.0\n",
            "1.0   2.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "0.0   3.0\n",
            "0.0   2.0\n",
            "2.0   2.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "0.0   2.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "1.0   3.0\n",
            "1.0   3.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "3.0   0.0\n",
            "0.0   2.0\n",
            "0.0   2.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "2.0   2.0\n",
            "1.0   3.0\n",
            "0.0   1.0\n",
            "1.0   2.0\n",
            "0.0   2.0\n",
            "1.0   3.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "2.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   1.0\n",
            "3.0   2.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "3.0   3.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "1.0   2.0\n",
            "1.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "0.0   2.0\n",
            "1.0   3.0\n",
            "1.0   3.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "0.0   3.0\n",
            "3.0   2.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "3.0   1.0\n",
            "1.0   3.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "2.0   0.0\n",
            "0.0   2.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "1.0   1.0\n",
            "3.0   3.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "0.0   2.0\n",
            "0.0   3.0\n",
            "2.0   1.0\n",
            "3.0   1.0\n",
            "2.0   1.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "3.0   3.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matrix = confusion_matrix(Y_test, Y_pred_2)\n",
        "print(matrix)\n",
        "print('')\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OBwVe61AqoV8",
        "outputId": "abab63e4-9eee-4dfa-d739-bd4fd5dbe7b7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[28  2 13 16]\n",
            " [ 4  9 11 16]\n",
            " [14  6 26 10]\n",
            " [ 9  7 11 18]]\n",
            "\n",
            "Accuracy  0.405\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[1, 26, 25, 150, 1, 3, 3, 0, 1, 0, 4], [3, 11, 18, 126, 0, 26, 13, 1, 1, 1, 5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction_0 = Modelo_0.predict(X_new)\n",
        "print(\"Predictions of Customers are: \",prediction_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R131iVXVqqlg",
        "outputId": "b658bd70-da72-4316-eb5a-74ffb370c173"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Customers are:  [1. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "===============================================================\n",
        "*texto en cursiva*"
      ],
      "metadata": {
        "id": "Sb_lLa0qqx-1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#QDA\n",
        "from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\n",
        "Modelo_3 = QuadraticDiscriminantAnalysis()\n",
        "Modelo_3.fit(X_train, Y_train)\n",
        "Y_pred_3 =Modelo_3.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_3[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IPSvnV_oqz5Y",
        "outputId": "3452c934-0387-411c-b658-50310527e341"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "3.0   3.0\n",
            "1.0   1.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "2.0   2.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "3.0   1.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "2.0   3.0\n",
            "1.0   3.0\n",
            "2.0   3.0\n",
            "2.0   0.0\n",
            "1.0   1.0\n",
            "2.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "3.0   1.0\n",
            "3.0   1.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   1.0\n",
            "1.0   0.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "0.0   1.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   3.0\n",
            "2.0   1.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "1.0   3.0\n",
            "1.0   3.0\n",
            "2.0   3.0\n",
            "0.0   2.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "3.0   2.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "0.0   1.0\n",
            "1.0   2.0\n",
            "0.0   2.0\n",
            "1.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "2.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   1.0\n",
            "3.0   1.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "3.0   1.0\n",
            "1.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "1.0   3.0\n",
            "1.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "0.0   2.0\n",
            "1.0   3.0\n",
            "1.0   3.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "0.0   3.0\n",
            "0.0   2.0\n",
            "3.0   1.0\n",
            "1.0   3.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "3.0   1.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "3.0   3.0\n",
            "2.0   1.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matrix = confusion_matrix(Y_test, Y_pred_3)\n",
        "print(matrix)\n",
        "print('')\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_3))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "39hVlFjDq6q6",
        "outputId": "e99e2eaf-b04e-4d8d-8b46-a93adcc3cc5a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[40  2  6 11]\n",
            " [14  9  1 16]\n",
            " [19  7 17 13]\n",
            " [15 10  7 13]]\n",
            "\n",
            "Accuracy  0.395\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[1, 26, 25, 150, 1, 3, 3, 0, 1, 0, 4], [3, 11, 18, 126, 0, 26, 13, 1, 1, 1, 5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction_0 = Modelo_0.predict(X_new)\n",
        "print(\"Predictions of Customers are: \",prediction_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DdUi2RACq-70",
        "outputId": "9bbcc569-9a48-437c-c9f2-9e7368700d4a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Customers are:  [1. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "============================================\n"
      ],
      "metadata": {
        "id": "lL88ql0YrHSA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#tree classifier\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "Modelo_4 = DecisionTreeClassifier()\n",
        "Modelo_4.fit(X_train, Y_train)\n",
        "Y_pred_4 =Modelo_4.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_4[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XUDJVMCCrH0d",
        "outputId": "9b787c7a-51d2-4959-e845-c556234b8d65"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "3.0   1.0\n",
            "1.0   3.0\n",
            "1.0   3.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "2.0   2.0\n",
            "3.0   1.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "1.0   1.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "1.0   3.0\n",
            "2.0   1.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "3.0   1.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "2.0   0.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   1.0\n",
            "0.0   2.0\n",
            "1.0   1.0\n",
            "1.0   0.0\n",
            "3.0   2.0\n",
            "3.0   1.0\n",
            "3.0   3.0\n",
            "3.0   0.0\n",
            "0.0   1.0\n",
            "2.0   1.0\n",
            "0.0   1.0\n",
            "2.0   0.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   2.0\n",
            "0.0   1.0\n",
            "2.0   2.0\n",
            "3.0   2.0\n",
            "3.0   2.0\n",
            "1.0   1.0\n",
            "0.0   0.0\n",
            "0.0   1.0\n",
            "1.0   2.0\n",
            "3.0   2.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "1.0   2.0\n",
            "2.0   1.0\n",
            "0.0   2.0\n",
            "1.0   1.0\n",
            "0.0   2.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "1.0   2.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "0.0   2.0\n",
            "2.0   1.0\n",
            "2.0   2.0\n",
            "3.0   0.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "2.0   1.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "2.0   1.0\n",
            "0.0   1.0\n",
            "2.0   2.0\n",
            "3.0   2.0\n",
            "2.0   0.0\n",
            "0.0   1.0\n",
            "1.0   2.0\n",
            "0.0   2.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "3.0   2.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "2.0   1.0\n",
            "3.0   2.0\n",
            "3.0   0.0\n",
            "0.0   1.0\n",
            "3.0   2.0\n",
            "1.0   0.0\n",
            "1.0   1.0\n",
            "1.0   1.0\n",
            "2.0   3.0\n",
            "0.0   2.0\n",
            "3.0   3.0\n",
            "3.0   3.0\n",
            "3.0   1.0\n",
            "0.0   2.0\n",
            "0.0   3.0\n",
            "2.0   3.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "0.0   2.0\n",
            "1.0   2.0\n",
            "0.0   1.0\n",
            "1.0   0.0\n",
            "3.0   3.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "1.0   1.0\n",
            "0.0   1.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "2.0   3.0\n",
            "2.0   1.0\n",
            "2.0   1.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "3.0   1.0\n",
            "1.0   1.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   2.0\n",
            "3.0   1.0\n",
            "1.0   1.0\n",
            "0.0   1.0\n",
            "3.0   0.0\n",
            "1.0   2.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "1.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "2.0   3.0\n",
            "0.0   1.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "1.0   1.0\n",
            "1.0   3.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "3.0   3.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "3.0   0.0\n",
            "1.0   1.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   2.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "1.0   2.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "0.0   2.0\n",
            "0.0   2.0\n",
            "2.0   1.0\n",
            "3.0   1.0\n",
            "2.0   3.0\n",
            "0.0   3.0\n",
            "0.0   3.0\n",
            "3.0   1.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matrix = confusion_matrix(Y_test, Y_pred_4)\n",
        "print(matrix)\n",
        "print('')\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_4))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A5bfThrdrOBz",
        "outputId": "afb3dc36-c60d-42fb-a436-bdd7225de2b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[20 12 13 14]\n",
            " [ 8 15 10  7]\n",
            " [10 12 26  8]\n",
            " [11  9 14 11]]\n",
            "\n",
            "Accuracy  0.36\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[1, 26, 25, 150, 1, 3, 3, 0, 1, 0, 4], [3, 11, 18, 126, 0, 26, 13, 1, 1, 1, 5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction_0 = Modelo_0.predict(X_new)\n",
        "print(\"Predictions of Customers are: \",prediction_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l_VaMILnrSru",
        "outputId": "e2c011db-2e66-410e-f204-f1936860c8ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Customers are:  [1. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "============================================"
      ],
      "metadata": {
        "id": "xiU9kIzYrarE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#SVM classifier\n",
        "from sklearn.svm import SVC\n",
        "Modelo_5 = SVC()\n",
        "Modelo_5.fit(X_train, Y_train)\n",
        "Y_pred_5 =Modelo_5.predict (X_test)\n",
        "# Graficando resultados\n",
        "print('Mostrando el Expected y predicted')\n",
        "for j in range(0,len(Y_test)): \n",
        "  print (Y_test[j],' ',Y_pred_5[j])\n",
        "print('')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rK-9VK_CrZBs",
        "outputId": "17cc1a50-21bc-4e2b-c506-53c12ff1fcae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mostrando el Expected y predicted\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "3.0   3.0\n",
            "0.0   2.0\n",
            "2.0   2.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   3.0\n",
            "1.0   3.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "1.0   2.0\n",
            "2.0   0.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   1.0\n",
            "1.0   2.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "3.0   0.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   3.0\n",
            "0.0   3.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "3.0   2.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "1.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "1.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "3.0   3.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "0.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "1.0   1.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   0.0\n",
            "3.0   0.0\n",
            "0.0   2.0\n",
            "3.0   3.0\n",
            "1.0   2.0\n",
            "1.0   2.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "3.0   2.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "1.0   1.0\n",
            "2.0   2.0\n",
            "1.0   0.0\n",
            "0.0   3.0\n",
            "1.0   2.0\n",
            "0.0   2.0\n",
            "1.0   0.0\n",
            "3.0   2.0\n",
            "2.0   0.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "2.0   3.0\n",
            "2.0   0.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "2.0   1.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "2.0   2.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "0.0   0.0\n",
            "3.0   0.0\n",
            "1.0   0.0\n",
            "3.0   0.0\n",
            "2.0   0.0\n",
            "3.0   2.0\n",
            "1.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "1.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "0.0   2.0\n",
            "1.0   0.0\n",
            "1.0   3.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "0.0   3.0\n",
            "3.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   1.0\n",
            "1.0   2.0\n",
            "1.0   0.0\n",
            "0.0   0.0\n",
            "3.0   3.0\n",
            "3.0   2.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "0.0   3.0\n",
            "2.0   0.0\n",
            "1.0   2.0\n",
            "3.0   3.0\n",
            "0.0   0.0\n",
            "2.0   0.0\n",
            "0.0   2.0\n",
            "0.0   0.0\n",
            "2.0   2.0\n",
            "3.0   0.0\n",
            "2.0   2.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "3.0   2.0\n",
            "2.0   2.0\n",
            "2.0   0.0\n",
            "2.0   0.0\n",
            "0.0   0.0\n",
            "0.0   0.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matrix = confusion_matrix(Y_test, Y_pred_5)\n",
        "print(matrix)\n",
        "print('')\n",
        "print(\"Accuracy \",accuracy_score(Y_test, Y_pred_5))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JDTgr41nrgUp",
        "outputId": "8478dc0f-8baa-4eb0-8a6d-da056612f86d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[45  0  7  7]\n",
            " [18  3 16  3]\n",
            " [21  1 27  7]\n",
            " [16  1 19  9]]\n",
            "\n",
            "Accuracy  0.42\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[1, 26, 25, 150, 1, 3, 3, 0, 1, 0, 4], [3, 11, 18, 126, 0, 26, 13, 1, 1, 1, 5]])\n",
        "X_new = scaler.transform(X_new)\n",
        "prediction_0 = Modelo_0.predict(X_new)\n",
        "print(\"Predictions of Customers are: \",prediction_0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ifjDyJ4prkcO",
        "outputId": "b8a969b3-1225-47f5-fa00-902a95508807"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predictions of Customers are:  [1. 0.]\n"
          ]
        }
      ]
    }
  ]
}